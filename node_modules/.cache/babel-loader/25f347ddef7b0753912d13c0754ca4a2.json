{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Downloads\\\\job-listings-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Jobs from \"./Jobs\";\nimport Filter from \"./Filter\"; // data is imported from this static file for this project\n\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // 2 useState hooks are used, one to display the jobs, \n  // the other is to filter the first hook with results the user has clicked\n  const [jobs, setJobs] = useState(data);\n  const [filter, setFilter] = useState([]); // when the user clicks one of the tags (role, level,\n  // languages, tools) it's added to the filter list if not already in\n\n  const addItem = item => {\n    if (filter.includes(item)) {\n      return;\n    } else {\n      setFilter([...filter, item]);\n    }\n  }; // each time the filter hook changes this hook filters \n  // the data and updates the jobs hook accordingly\n\n\n  useEffect(() => {\n    let newJobList = [];\n    data.forEach(job => {\n      let string = JSON.stringify(job);\n      let count = 0;\n      filter.forEach(item => {\n        if (string.includes(item)) {\n          count++;\n        }\n      });\n\n      if (count === filter.length) {\n        newJobList.push(job);\n      }\n    });\n    setJobs(newJobList);\n  }, [filter]); // handles the clear button in filter component\n\n  const clearFilter = () => {\n    setFilter([]);\n    setJobs(data);\n  }; // handles the close buttons on the filter items\n\n\n  const removeItem = removed => {\n    if (filter.length > 1) {\n      setFilter(filter.filter(item => item !== removed));\n    } else {\n      clearFilter();\n    }\n  }; // components returned here, filter only displays if it has values\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [filter.length > 0 && /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      clearFilter: clearFilter,\n      removeItem: removeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Jobs, {\n      jobs: jobs,\n      addItem: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"attribution\",\n      children: [\"Challenge by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.frontendmentor.io/challenges/job-listings-with-filtering-ivstIPCt\",\n        target: \"_blank\",\n        children: \"Frontend Mentor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }, this), \". Coded by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/michagodfrey\",\n        children: \"Michael Godfrey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YZekeFuv2fG7f5ULByJh75aBu30=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Hp/Downloads/job-listings-main/src/App.js"],"names":["React","useEffect","useState","Jobs","Filter","data","App","jobs","setJobs","filter","setFilter","addItem","item","includes","newJobList","forEach","job","string","JSON","stringify","count","length","push","clearFilter","removeItem","removed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACG,IAAD,CAAhC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAJa,CAMb;AACA;;AACA,QAAMS,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAIH,MAAM,CAACI,QAAP,CAAgBD,IAAhB,CAAJ,EAA2B;AACzB;AACD,KAFD,MAEO;AACLF,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYG,IAAZ,CAAD,CAAT;AACD;AACF,GAND,CARa,CAgBb;AACA;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,UAAU,GAAG,EAAjB;AACAT,IAAAA,IAAI,CAACU,OAAL,CAAcC,GAAD,IAAS;AACpB,UAAIC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAb;AACA,UAAII,KAAK,GAAG,CAAZ;AACAX,MAAAA,MAAM,CAACM,OAAP,CAAgBH,IAAD,IAAU;AACvB,YAAIK,MAAM,CAACJ,QAAP,CAAgBD,IAAhB,CAAJ,EAA2B;AACzBQ,UAAAA,KAAK;AACN;AACF,OAJD;;AAKA,UAAIA,KAAK,KAAKX,MAAM,CAACY,MAArB,EAA6B;AAC3BP,QAAAA,UAAU,CAACQ,IAAX,CAAgBN,GAAhB;AACD;AACF,KAXD;AAYAR,IAAAA,OAAO,CAACM,UAAD,CAAP;AACD,GAfQ,EAeN,CAACL,MAAD,CAfM,CAAT,CAlBa,CAmCb;;AACA,QAAMc,WAAW,GAAG,MAAM;AACxBb,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,IAAAA,OAAO,CAACH,IAAD,CAAP;AACD,GAHD,CApCa,CAyCb;;;AACA,QAAMmB,UAAU,GAAIC,OAAD,IAAa;AAC9B,QAAIhB,MAAM,CAACY,MAAP,GAAgB,CAApB,EAAuB;AACrBX,MAAAA,SAAS,CAACD,MAAM,CAACA,MAAP,CAAeG,IAAD,IAAUA,IAAI,KAAKa,OAAjC,CAAD,CAAT;AACD,KAFD,MAEO;AACLF,MAAAA,WAAW;AACZ;AACF,GAND,CA1Ca,CAkDb;;;AACA,sBACE;AAAA,eACGd,MAAM,CAACY,MAAP,GAAgB,CAAhB,iBACC,QAAC,MAAD;AACE,MAAA,MAAM,EAAEZ,MADV;AAEE,MAAA,WAAW,EAAEc,WAFf;AAGE,MAAA,UAAU,EAAEC;AAHd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEjB,IAAZ;AAAkB,MAAA,OAAO,EAAEI;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF,eASG;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,+CACe;AAAG,QAAA,IAAI,EAAC,+EAAR;AAAwF,QAAA,MAAM,EAAC,QAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADf,8BAEW;AAAG,QAAA,IAAI,EAAC,iCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA,YATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnEQL,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Jobs from \"./Jobs\";\nimport Filter from \"./Filter\";\n// data is imported from this static file for this project\nimport data from \"./data.json\";\n\nfunction App() {\n  // 2 useState hooks are used, one to display the jobs, \n  // the other is to filter the first hook with results the user has clicked\n  const [jobs, setJobs] = useState(data);\n  const [filter, setFilter] = useState([]);\n\n  // when the user clicks one of the tags (role, level,\n  // languages, tools) it's added to the filter list if not already in\n  const addItem = (item) => {\n    if (filter.includes(item)) {\n      return;\n    } else {\n      setFilter([...filter, item]);\n    }\n  };\n\n  // each time the filter hook changes this hook filters \n  // the data and updates the jobs hook accordingly\n  useEffect(() => {\n    let newJobList = [];\n    data.forEach((job) => {\n      let string = JSON.stringify(job);\n      let count = 0;\n      filter.forEach((item) => {\n        if (string.includes(item)) {\n          count++;\n        }\n      });\n      if (count === filter.length) {\n        newJobList.push(job);\n      }\n    });\n    setJobs(newJobList);\n  }, [filter]);\n\n  // handles the clear button in filter component\n  const clearFilter = () => {\n    setFilter([]);\n    setJobs(data);\n  };\n\n  // handles the close buttons on the filter items\n  const removeItem = (removed) => {\n    if (filter.length > 1) {\n      setFilter(filter.filter((item) => item !== removed));\n    } else {\n      clearFilter();\n    }\n  };\n\n  // components returned here, filter only displays if it has values\n  return (\n    <main>\n      {filter.length > 0 && (\n        <Filter\n          filter={filter}\n          clearFilter={clearFilter}\n          removeItem={removeItem}\n        />\n      )}\n      <Jobs jobs={jobs} addItem={addItem} />\n       <div class=\"attribution\">\n         Challenge by <a href=\"https://www.frontendmentor.io/challenges/job-listings-with-filtering-ivstIPCt\" target=\"_blank\">Frontend Mentor</a>.\n         Coded by <a href=\"https://github.com/michagodfrey\">Michael Godfrey</a>.\n       </div> \n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}